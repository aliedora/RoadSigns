package com.example.roadsigns

import com.example.roadsigns.models.SignModel

class LoadSigns {

    fun loadSigns() : ArrayList<SignModel>{
        val signs = arrayListOf(
            SignModel(R.drawable.stop_back, "Stop from back", true ),
            SignModel(R.drawable.stop_front, "Stop from front", true),
            SignModel(R.drawable.stop_front_back, "Stop from front and back", true),
            SignModel(R.drawable.go_front, "Go from front", true),
            SignModel(R.drawable.go_back, "Go from back", true),
            SignModel(R.drawable.go_side, "Go from side road", true),
            SignModel(R.drawable.intend_slow_or_stop, "Intend to SLOW DOWN or STOP", false),
            SignModel(R.drawable.intend_move_right, "Intend to MOVE TO THE RIGHT", false),
            SignModel(R.drawable.intend_turn_left, "Intend to MOVE TO THE LEFT or TURN LEFT", false),

            SignModel(R.drawable.bend_left, "Dangerous bend to the left", false),
            SignModel(R.drawable.bend_right, "Dangerous bend to the right", false),
            SignModel(R.drawable.multiple_bend_first_left, "Multiple bends first to the left", false),
            SignModel(R.drawable.multiple_bend_first_right, "Multiple bends first to the right", false),
            SignModel(R.drawable.hump, "Road hump", false),
            SignModel(R.drawable.steep_hill_downwards, "Steep hill downwards", false),
            SignModel(R.drawable.steep_hill_upwards, "Steep hill upwards", false),
            SignModel(R.drawable.fallen_rock, "Fallen rock", false),
            SignModel(R.drawable.slippery_road, "Slippery road", false),
            SignModel(R.drawable.uneven_road, "Uneven road", false),
            SignModel(R.drawable.loose_surface, "Loose surface", false),
            SignModel(R.drawable.road_narrows_both_sides, "Road narrows both sides", false),
            SignModel(R.drawable.road_narrows_left, "Road narrows on the left", false),
            SignModel(R.drawable.road_narrows_right, "Road narrows on the right", false),

            SignModel(R.drawable.road_works, "Road works ahead", false ),
            SignModel(R.drawable.children, "Frequent use of road by children", false ),
            SignModel(R.drawable.two_way_traffic, "Two way traffic", false ),
            SignModel(R.drawable.two_way_traffic_cross, "Two way traffic crosses one-way road", false ),
            SignModel(R.drawable.other_dangers, "Other dangers", false ),
            SignModel(R.drawable.junction1, "Junction with secondary roads", true ),
            SignModel(R.drawable.junction2, "Junction with secondary roads", true ),
            SignModel(R.drawable.junction3, "Junction with secondary roads", true ),
            SignModel(R.drawable.junction4, "Junction with secondary roads", true ),
            SignModel(R.drawable.junction5, "Junction with secondary roads", true ),
            SignModel(R.drawable.junction6, "Junction with secondary roads", true ),

            SignModel(R.drawable.junction_priority_right, "Junction where priority have cars from the RIGHT", false ),
            SignModel(R.drawable.roundabout, "Roundabout", false ),
            SignModel(R.drawable.warning_distance, "Give way in 200m", false ),
            SignModel(R.drawable.warning_stop, "Give way. You have stop in 50m", false ),
            SignModel(R.drawable.priority_opposite, "Priority for vehicles coming from OPPOSITE directions", false ),
            SignModel(R.drawable.priority_you, "Priority to traffic in YOUR directions", false ),
            SignModel(R.drawable.give_way, "Give way", true ),
            SignModel(R.drawable.stop, "STOP", true ),
            SignModel(R.drawable.priority, "Road with priority", true ),
            SignModel(R.drawable.priority_end, "End of road with priority", true ),
            SignModel(R.drawable.controlled_crossing1, "Junction with control", false ),
            SignModel(R.drawable.not_controlled_crossing, "Junction without control", false ),
            SignModel(R.drawable.not_controlled_2, "Junction without control", false ),
            SignModel(R.drawable.distance_to_junction, "Distance to the junction (300 - 200 - 100m)", true ),

            SignModel(R.drawable.no_entry, "No ENTRY", false ),
            SignModel(R.drawable.closed_to_all, "Road closed to all traffic in both directions", true ),
            SignModel(R.drawable.no_cars, "No entry for all vehicles except two wheeled motor cycles", false ),
            SignModel(R.drawable.no_motor_cycles, "No entry for motor cycles", false ),
            SignModel(R.drawable.no_auto_cycles, "No entry for auto cycles", false ),
            SignModel(R.drawable.no_pedestrians, "No crossing for pedestrians", false ),
            SignModel(R.drawable.no_turn_left, "No turn left", false ),
            SignModel(R.drawable.no_turn_right, "No turn right", false ),
            SignModel(R.drawable.no_u_turns, "No U turns", false ),
            SignModel(R.drawable.no_motor_vehicles, "No mechanically propelled vehicles through", true ),
            SignModel(R.drawable.no_overtaking, "No overtaking", true ),
            SignModel(R.drawable.no_tons, "No vehicles in excess of 7 tons through", false ),
            SignModel(R.drawable.width, "No vehicles more than 2.3m wide", false ),
            SignModel(R.drawable.max_height, "No vehicles more than 3.5m in height", false ),

            SignModel(R.drawable.max_speed_limit, "Maximum speed", false ),
            SignModel(R.drawable.end_overtaking_prohib, "End of overtaking prohibition (You can overtake)", false ),
            SignModel(R.drawable.end_all_prohib, "End of all prohibitions", false ),
            SignModel(R.drawable.end_speed_limit, "End speed limit (Yo can move more than 50)", false ),
            SignModel(R.drawable.keep_left, "Keep left", false ),
            SignModel(R.drawable.keep_right, "Keep right", false ),
            SignModel(R.drawable.turn_left_ahead, "Turn left ahead", false ),
            SignModel(R.drawable.turn_right_ahead, "Turn right ahead", false ),
            SignModel(R.drawable.compulsory_chains, "Compulsory use of wheel chains", false ),
            SignModel(R.drawable.compulsory_roundabout, "Compulsory roundabout", false ),
            SignModel(R.drawable.compulsory_speed, "Compulsory minimum speed limit", false ),
            SignModel(R.drawable.dir_left, "Go left", false ),
            SignModel(R.drawable.dir_straight, "Go ahead", false ),
            SignModel(R.drawable.rid_righr, "Go right", false ),
            SignModel(R.drawable.go_straight_or_left, "Go straight or left", false ),
            SignModel(R.drawable.go_straight_or_right, "Go straight or right", false ),

            SignModel(R.drawable.dead_end, "Dead end road (No way through)", false ),
            SignModel(R.drawable.one_wa1, "One-way road", false ),
            SignModel(R.drawable.one_way2, "One-way road", false ),
            SignModel(R.drawable.motorway, "Motorway", false ),
            SignModel(R.drawable.end_motorway, "End of motorway", false ),

            SignModel(R.drawable.no_parking, "No parking", true ),
            SignModel(R.drawable.no_stop_and_parking, "No parking and waiting", true ),
            SignModel(R.drawable.no_parking_odd, "Parking prohibited ODD dates", true ),
            SignModel(R.drawable.no_parking_even, "Parking prohibited EVEN dates", true ),
            SignModel(R.drawable.parking_limited, "Yes you can park limited time (restricted duration)", true ),


            SignModel(R.drawable.hump_bridge, "Hump bridge", false ),
            SignModel(R.drawable.junction_bend_ahead1, "Junction on bend ahead", false ),
            SignModel(R.drawable.junction_bend_ahead2, "Junction on bend ahead", false ),
            SignModel(R.drawable.pedestrians_ahead, "Pedestrians in road ahead", false ),
            SignModel(R.drawable.airport, "Airport (low flying planes)", false ),
            SignModel(R.drawable.traffic_jam, "Traffic queues likely ahead", false ),
            SignModel(R.drawable.pedestrian_crossing, "Pedestrians crossing", false ),
            SignModel(R.drawable.soft_road_left, "Soft road left (verge on the left)", false ),
            SignModel(R.drawable.soft_road_right, "Soft road right (verge on the right)", false ),
            SignModel(R.drawable.tunnel, "Tunnel ahead", false ),
            SignModel(R.drawable.electric_cable, "Overhead electric cable", false ),
            SignModel(R.drawable.risk_of_ice, "Risk of ice", false ),
            SignModel(R.drawable.dual_carriegeway, "2 roads become 1 (Dual carriageway ends)", false ),
            SignModel(R.drawable.one_wa1, "One-way road", false ),

            SignModel(R.drawable.compulsory_left_turn, "Compulsory left turn", false ),
            SignModel(R.drawable.compulsory_right_turn, "Compulsory right turn", false ),
            SignModel(R.drawable.compulsory_turn_both, "Compulsory turn from left or right", false ),
            SignModel(R.drawable.box_junction, "Box junction (Controlled square crossing). Enter the square when you intend to turn right", true ),
            SignModel(R.drawable.humper_crossing, "Humped crossing", false ),
            SignModel(R.drawable.warning_school, "Warning signs in schools", false ),


            SignModel(R.drawable.residental_end, "End residential area (users don't have equal priority)", false ),
            SignModel(R.drawable.resid, "Residential area (users have equal priority)", false ),
            SignModel(R.drawable.overpass, "Overpass", false ),
            SignModel(R.drawable.underpass, "Underpass", false ),
            SignModel(R.drawable.underpass_ramp, "Underpass with ramp", false ),
            SignModel(R.drawable.pedestrian_blue, "JPedestrian crossing", false ),
            SignModel(R.drawable.speed_road, "Speed road", false ),
            SignModel(R.drawable.end_speed_road, "End of speed road", false ),
            )
        return signs
    }
}